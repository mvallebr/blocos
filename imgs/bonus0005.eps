%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (./bonus0005.eps)
%%CreationDate: (Sun Jan 27 05:58:39 2002)
%%BoundingBox: 0 0 40 20
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 40 20
userdict begin
DisplayImage
0 0
40 20
12.000000
40 20
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff241211211110221110221111221111231111231111231211
241211241211241211241212251212251212251212251212251212251212251212251212
251212251212251212251212251212251212251212241212241211241211241211231211
231111231111221111221111221110211110241211ffffff1c0e0e251212231111231111
241211241211241212251212251212251212251212251312261312261312261312261312
261312261312261313261313261313261312261312261312261312261312261312251312
2512122512122512122512122412122412112412112311112311112512121c0e0effffff
1c0e0e251212261313271313251212251212251212261312261312261312261313271313
271313271313271313271313271313271413271413281413271413271413271313271313
271313271313271313271313261313261312261312261312251212251212251212271313
2613132512121c0e0effffff1c0e0e1e0f0e2613122814132914142a1514261313271313
271313271313281413281413281413281413281413281414291414291414291414291414
291414291414291414281414281413281413281413281413281413271313271313271313
2613132a15142914142814132613121e0f0e1c0e0effffff1c0e0e1e0f0e1f0f0f271313
2914142a15142c16152d1616271313271313271313271313281413281413281413281413
281413281413281413281413281413281413281413281413281413281413281413271313
2713132713132713132d16162c16152a15142914142713131f0f0f1e0f0e1c0e0effffff
1c0e0e1e0f0e1f0f0f2814132814132a15142c16152d16162e17162f1717281413291414
291414291414291414291414291414291414291414291414291414291414291414291414
2914142914142914142914142814132f17172e17162d16162c16152a1514281413281413
1f0f0f1e0f0e1c0e0effffff1c0e0e1e0f0e1f0f0f2010102914142914142c16152d1616
2e17162512122513122613122e17162e17162e17162e17162e17162e17162e17162e1716
2e17162e17162e17162e17162e17162e17162e17162613122513122512122e17162d1616
2c16152914142914142010101f0f0f1e0f0e1c0e0effffff1d0e0e1e0f0e1f0f0f201010
2a15142a15142412112412122512122613122e17162d16162d16162d16162d16162d1616
2d16162d16162d16162d16162d16162d16162d16162d16162d16162d16162d16162d1616
2e17162613122512122412122412112a15142a15142010101f0f0f1e0f0e1d0e0effffff
1d0e0e1e0f0e1f0f0f2010102211102b15152512122513122d16162d16162d16162c1615
2c16152c16152c16152c16152c16152c16152c16152c16152c16152c16152c16152c1615
2c16152c16152c16152c16152d16162d16162d16162513122512122b1515221110201010
1f0f0f1e0f0e1d0e0effffff1d0e0e1e0f0e1f0f0f2010102211102c16152c16152c1615
2c16152c16152c16152b15152b15152b15152b15152b15152b15152b15152b15152b1515
2b15152b15152b15152b15152b15152b15152b15152b15152c16152c16152c16152c1615
2c16152c16152211102010101f0f0f1e0f0e1d0e0effffff1d0e0e1e0f0e1f0f0f201010
2211102b15152512122513122d16162d16162d16162c16152c16152c16152c16152c1615
2c16152c16152c16152c16152c16152c16152c16152c16152c16152c16152c16152c1615
2d16162d16162d16162513122512122b15152211102010101f0f0f1e0f0e1d0e0effffff
1d0e0e1e0f0e1f0f0f2010102a15142a15142412112412122512122613122e17162d1616
2d16162d16162d16162d16162d16162d16162d16162d16162d16162d16162d16162d1616
2d16162d16162d16162d16162e17162613122512122412122412112a15142a1514201010
1f0f0f1e0f0e1d0e0effffff1c0e0e1e0f0e1f0f0f2010102914142914142c16152d1616
2e17162512122513122613122e17162e17162e17162e17162e17162e17162e17162e1716
2e17162e17162e17162e17162e17162e17162e17162613122513122512122e17162d1616
2c16152914142914142010101f0f0f1e0f0e1c0e0effffff1c0e0e1e0f0e1f0f0f281413
2814132a15142c16152d16162e17162f1717281413291414291414291414291414291414
291414291414291414291414291414291414291414291414291414291414291414291414
2814132f17172e17162d16162c16152a15142814132814131f0f0f1e0f0e1c0e0effffff
1c0e0e1e0f0e1f0f0f2713132914142a15142c16152d1616271313271313271313271313
281413281413281413281413281413281413281413281413281413281413281413281413
2814132814132814132713132713132713132713132d16162c16152a1514291414271313
1f0f0f1e0f0e1c0e0effffff1c0e0e1e0f0e2613122814132914142a1514261313271313
271313271313281413281413281413281413281413281414291414291414291414291414
291414291414291414281414281413281413281413281413281413271313271313271313
2613132a15142914142814132613121e0f0e1c0e0effffff1c0e0e251212261313271313
251212251212251212261312261312261312261313271313271313271313271313271313
271313271413271413281413271413271413271313271313271313271313271313271313
2613132613122613122613122512122512122512122713132613132512121c0e0effffff
1c0e0e251212231111231111241211241211241212251212251212251212251212251312
261312261312261312261312261312261312261313261313261313261312261312261312
261312261312261312251312251212251212251212251212241212241211241211231111
2311112512121c0e0effffff241211211110221110221111221111231111231111231211
241211241211241211241212251212251212251212251212251212251212251212251212
251212251212251212251212251212251212251212241212241211241211241211231211
231111231111221111221111221110211110241211ffffff
end
%%PageTrailer
%%Trailer
%%EOF
