%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (./spritep0001.eps)
%%CreationDate: (Sun Jan 27 05:58:48 2002)
%%BoundingBox: 0 0 30 20
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 30 20
userdict begin
DisplayImage
0 0
30 20
12.000000
30 20
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff3b3b3b3737372828284545450a0a0a444444
3434342727274444443434341d1d1d2b2b2b2b2b2b4141410c0c0c434343464646424242
4646463333332b2b2b3131313c3c3c2323231818184444443939391e1e1e363636ffffff
6161613d3d3d1d1d1dffffffffffffffffffffffffffffffffffffffffffd1d1d1ffffff
ffffffffffff333333ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff373737393939656565ffffff6565653b3b3b3b3b3bffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff8f8f8f2929298f8f8fffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff333333353535545454ffffff
4646465e5e5e383838ffffffe1e1e1ffffffffffffffffffffffffffffffffffffffffff
3434341a1a1a2626263b3b3b333333ffffffffffffffffffffffffffffffffffffffffff
ffffffffffff3131315f5f5f636363ffffff6464645151513d3d3dffffffffffffffffff
fdfdfdffffffffffffffffff8080807474744444448f8f8f8f8f8f8f8f8f8f8f8f767676
747474ffffffcbcbcbffffffffffffffffffffffffffffff2525255959593f3f3fffffff
545454656565505050eaeaeaffffffffffffffffffffffffbcbcbc8989897d7d7d7e7e7e
6464646c6c6c6a6a6a8d8d8d6767676363636a6a6a848484c0c0c0ffffffffffffffffff
ffffffffffff656565656565656565ffffff5858586464644c4c4cdcdcdcffffffcdcdcd
bcbcbc4d4d4d2a2a2a4949495555556666664949495252523a3a3a3d3d3d1f1f1f515151
5b5b5b4e4e4e5b5b5b515151ffffffffffffa5a5a5acacac5d5d5d616161484848ffffff
484848545454191919ffffffffffffffffff8b8b8b8d8d8d8f8f8f8f8f8f7c7c7c848484
8f8f8f7575751f1f1f8d8d8d8f8f8f8f8f8f8d8d8d4f4f4f8d8d8d7777778f8f8fffffff
ffffffffffff2d2d2d1c1c1c3d3d3dffffff646464656565151515ffffff7c7c7c5f5f5f
8686867070708080808383836d6d6d8e8e8e7e7e7e8181813636368f8f8f8f8f8f8f8f8f
8f8f8f7d7d7d8f8f8f8b8b8b8f8f8f8a8a8a8a8a8affffff1010105050505f5f5fffffff
2020201515153737373838385f5f5f3e3e3e474747121212656565171717636363393939
1414146e6e6e1a1a1a1717174a4a4a2f2f2f3a3a3a2424243636361313132a2a2a464646
1717171919191c1c1c161616525252ffffff5454546565655d5d5dffffff6565655f5f5f
6767678d8d8d4b4b4b8c8c8c8d8d8d8b8b8b8b8b8b4a4a4a6e6e6e8a8a8a8282828f8f8f
5b5b5b5050506868688080808f8f8f6b6b6b626262ffffff5252524f4f4f545454ffffff
5050504e4e4e414141ffffffffffffffffff8f8f8f8989893737377777778e8e8e8f8f8f
8f8f8f8f8f8f8f8f8f8c8c8c8f8f8f8d8d8d7777778f8f8f2b2b2b7373738b8b8bffffff
ffffffffffff6565652d2d2d4a4a4affffff646464636363404040fefefeffffffc9c9c9
dcdcdc8080806868685f5f5f5959590f0f0f7b7b7b6262623333336969696565651b1b1b
5e5e5e1919192c2c2c646464abababc3c3c3ffffffffffff383838545454656565ffffff
5f5f5f6262620b0b0bffffffffffffffffffffffffffffffffffff8888886e6e6e808080
8f8f8f8282824b4b4b8c8c8c7373738d8d8d7c7c7c8d8d8dffffffffffffffffffffffff
ffffffffffff3e3e3e494949656565ffffff646464575757373737ffffffffffffffffff
ffffffffffffffffffffffff8f8f8f8484846868688f8f8f1111118d8d8d8f8f8f8f8f8f
7c7c7cfffffffffffffffffffcfcfcffffffffffffffffff1111116565655c5c5cffffff
6161616565654e4e4efffffffffffffffffff1f1f1eaeaeafefefefffffffffffffefefe
4040405656563434343f3f3f2a2a2affffffffffffffffff9b9b9bf6f6f6ffffffd5d5d5
fefefeffffff5f5f5f656565606060ffffff5656563f3f3f646464ffffffffffffffffff
ffffffffffffeaeaeaffffffffffffffffffffffff8f8f8f8f8f8f8f8f8fffffffffffff
ffffffffffffa4a4a4ffffffffffffffffffffffffffffff656565656565646464ffffff
5f5f5f515151343434ffffffffffffffffffffffffffffffcfcfcfffffffffffffffffff
ffffffffffff5e5e5effffffffffffffffffffffffffffffb3b3b3ffffffffffffffffff
ffffffffffff2727275454545e5e5effffff5151514343433d3d3d434343363636323232
414141303030363636121212383838434343383838464646444444464646353535464646
4646460a0a0a2b2b2b2828283e3e3e2e2e2e3131314444442d2d2d464646393939ffffff

end
%%PageTrailer
%%Trailer
%%EOF
